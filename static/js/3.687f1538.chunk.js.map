{"version":3,"sources":["components/PersonPage/PersonFilms/PersonFilms.module.css","components/PersonPage/PersonFilms/PersonFilms.jsx"],"names":["module","exports","PersonFilms","personFilms","useState","filmsName","setFilmsName","useEffect","a","filmsHTTPS","map","url","changeHTTP","makeConCurrentRequest","response","className","styles","wrapper","list__container","sort","b","episode_id","title","list__item","item__episide","item__colon","item__title"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,QAAU,6BAA6B,gBAAkB,qCAAqC,WAAa,gCAAgC,cAAgB,mCAAmC,YAAc,iCAAiC,YAAc,mC,iHCmC9PC,UA/BK,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EACDC,mBAAS,IADR,mBAC5BC,EAD4B,KACjBC,EADiB,KASnC,OAPAC,qBAAU,WACN,sBAAC,8BAAAC,EAAA,6DACSC,EAAaN,EAAYO,KAAI,SAAAC,GAAG,OAAGC,YAAWD,MADvD,SAE0BE,YAAsBJ,GAFhD,OAESK,EAFT,OAGGR,EAAcQ,GAHjB,0CAAD,KAKD,IAEC,qBAAKC,UAAWC,IAAOC,QAAvB,SACI,oBAAIF,UAAWC,IAAOE,gBAAtB,SACKb,EACAc,MAAK,SAACX,EAAEY,GAAH,OAASZ,EAAEa,WAAaD,EAAEC,cAC/BX,KAAI,gBAAEY,EAAF,EAAEA,MAAOD,EAAT,EAASA,WAAT,OACD,qBAAIN,UAAWC,IAAOO,WAAtB,UACI,uBAAMR,UAAWC,IAAOQ,cAAxB,qBAAgDH,KAChD,sBAAMN,UAAWC,IAAOS,YAAxB,iBACA,sBAAMV,UAAWC,IAAOU,YAAxB,SAAsCJ,MAHHD","file":"static/js/3.687f1538.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PersonFilms_wrapper__SEJCU\",\"list__container\":\"PersonFilms_list__container__23L5q\",\"list__item\":\"PersonFilms_list__item__3LQzp\",\"item__episide\":\"PersonFilms_item__episide__kP_NX\",\"item__colon\":\"PersonFilms_item__colon__2t9lR\",\"item__title\":\"PersonFilms_item__title__26c9l\"};","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {makeConCurrentRequest, changeHTTP} from '../../../utils/network';\r\nimport styles from './PersonFilms.module.css';\r\n\r\nconst PersonFilms = ({personFilms}) => {\r\n    const [filmsName, setFilmsName] = useState([])\r\n    useEffect(() =>{\r\n        (async() => {\r\n            const filmsHTTPS = personFilms.map(url=> changeHTTP(url));\r\n            const response = await makeConCurrentRequest(filmsHTTPS);\r\n            setFilmsName (response)\r\n        }) ()\r\n    }, []);\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <ul className={styles.list__container}>\r\n                {filmsName\r\n                .sort((a,b) => a.episode_id - b.episode_id)\r\n                .map(({title, episode_id}) => \r\n                    <li className={styles.list__item} key={episode_id}>\r\n                        <span className={styles.item__episide}>Episode {episode_id}</span>\r\n                        <span className={styles.item__colon}> : </span>\r\n                        <span className={styles.item__title}>{title}</span>\r\n                    </li>\r\n                )}\r\n            </ul>     \r\n        </div>\r\n    )\r\n}\r\n\r\nPersonFilms.propTypes = {\r\n    personFilms: PropTypes.array,\r\n}\r\n\r\n\r\nexport default PersonFilms;\r\n"],"sourceRoot":""}